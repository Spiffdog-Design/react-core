<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ReactCore.Web</name>
    </assembly>
    <members>
        <member name="M:ReactCore.Web.Controllers.DataGridController.GetDataGridData">
            <summary>
            Retrieve mock data grid data.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> claim.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.DataGridController.DeleteDataGridData(System.Int32)">
            <summary>
            Delete a mock data grid data row.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> and  <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Write"/> claims.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.DataGridController.SaveDataGridData(ReactCore.Data.Models.DataGrid.DataGrid)">
            <summary>
            Insert a mock data grid data row.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> and  <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Write"/> claims.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.ProjectController.GetProjects">
            <summary>
            Retrieve all projects.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> claim.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.ProjectController.GetMyProjects">
            <summary>
            Retrieve projects for logged in user.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> claim.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.ProjectController.GetProject(System.Int32)">
            <summary>
            Retrieve a project by id.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> claim.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.ProjectController.GetTasks(System.Int32)">
            <summary>
            Retrieve tasks for a project.
            </summary>
            <param name="projectId">The id of the project.</param>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> claim.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.ProjectController.SaveProject(ReactCore.Data.Models.ToDo.Project)">
            <summary>
            Insert a project data row.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> and  <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Write"/> claims.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.ProjectController.UpdateProject(ReactCore.Data.Models.ToDo.Project)">
            <summary>
            Update a project data row.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> and  <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Write"/> claims.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.ProjectController.DeleteProject(System.Int32)">
            <summary>
            Delete a project data row.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> and  <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Write"/> claims.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.TaskController.GetTasks">
            <summary>
            Retrieve all tasks.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> claim.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.TaskController.GetMyTasks">
            <summary>
            Retrieve a task by id.
            </summary>
            <param name="taskId">The id of the task.</param>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> claim.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.TaskController.GetTask(System.Int32)">
            <summary>
            Retrieve a task by id.
            </summary>
            <param name="taskId">The id of the task.</param>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> claim.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.TaskController.SaveTask(ReactCore.Data.Models.ToDo.Task)">
            <summary>
            Insert a task data row.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> and  <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Write"/> claims.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.TaskController.UpdateTask(ReactCore.Data.Models.ToDo.Task)">
            <summary>
            Update a task data row.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> and  <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Write"/> claims.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.TaskController.DeleteTask(System.Int32)">
            <summary>
            Delete a project data row.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> and  <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Write"/> claims.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.UserController.GetUsers">
            <summary>
            Retrieve all active users.
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.Read"/> claim.</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.UserController.GetUserInfo">
            <summary>
            Retrieve current user information
            </summary>
            <returns></returns>
            <response code="200">Ok</response>
        </member>
        <member name="M:ReactCore.Web.Controllers.UserController.ResetUser(System.String)">
            <summary>
            Reset user info in security cache
            </summary>
            <param name="userKey">The cache key for the user to reset.  This is typically their AB domain login.</param>
            <returns></returns>
            <response code="200">Ok</response>
            <response code="403">Requires <see cref="F:ReactCore.Web.Attributes.Authorization.ClaimsAuthorizationConstants.Claims.ResetUser"/> claim.</response>
        </member>
        <member name="M:ReactCore.Web.Swagger.ConfigureSwaggerOptions.#ctor(Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:ReactCore.Web.Swagger.ConfigureSwaggerOptions"/> class.
            </summary>
            <param name="provider">The <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.IApiVersionDescriptionProvider">provider</see> used to generate Swagger documents.</param>
        </member>
        <member name="M:ReactCore.Web.Swagger.ConfigureSwaggerOptions.Configure(Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions)">
            <inheritdoc />
        </member>
        <member name="M:ReactCore.Web.Swagger.SwaggerDefaultValues.Apply(Swashbuckle.AspNetCore.Swagger.Operation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Applies the filter to the specified operation using the given context.
            </summary>
            <param name="operation">The operation to apply the filter to.</param>
            <param name="context">The current operation filter context.</param>
        </member>
    </members>
</doc>
